version: '3'

networks:
  laravel:

services:
  site:
    build:
      context: ./dockerfiles
      dockerfile: apache.dockerfile
    container_name: apache
    ports:
      - 8080:80
      - 8443:443
    restart: always
    environment:
      APP_FQDN: ${APP_FQDN}
    volumes:
      - ./:/var/www/html:delegated
      - ./dockerfiles/apache/logs:/var/log/apache2/
      - ./dockerfiles/localhost/:/etc/letsencrypt/live/localhost/
      - /etc/letsencrypt/:/etc/letsencrypt/
    depends_on:
      - php
      - mysql
      - nginx
    networks:
      - laravel

  mysql:
    image: mariadb:10.6
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php
    volumes:
      - ./:/var/www/html:delegated
    networks:
      - laravel

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel

  npm:
    image: node:latest
    container_name: npm
    volumes:
      - ./:/var/www/html
      - ./storage/mysql:/var/lib/mysql
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: artisan
    volumes:
      - ./:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel


  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    environment:
      APP_FQDN: ${APP_FQDN}
    volumes:
      - ./:/var/www/html:delegated
      - ./dockerfiles/nginx/logs:/var/log/nginx
      - ./dockerfiles/nginx/templates/:/etc/nginx/templates
      - ./dockerfiles/localhost/:/etc/letsencrypt/live/localhost/
      - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - 80:80
      - 443:443
    networks:
      - laravel

  certbot:
     image: certbot/certbot:latest
     container_name: certbot
     command: certonly --webroot --webroot-path=/var/www/html/public --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email -d ${APP_FQDN} -v
     volumes:
       - ./:/var/www/html:delegated
       - /etc/letsencrypt/:/etc/letsencrypt/
       - ./dockerfiles/certbot/logs/:/var/log/letsencrypt
       - ./dockerfiles/certbot/data:/usr/share/nginx/html/letsencrypt

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel
