version: '3'

networks:
  default:
    # external: true

services:
  apache:
    container_name: ${APP_NAME}_apache
    build:
      context: ./dockerfiles
      dockerfile: apache.dockerfile
    expose:
      - 80
      - 443
    restart: always
    environment:
      APP_FQDN: ${APP_FQDN}
    volumes:
      - ./:/var/www/html:delegated
      - ./dockerfiles/apache/logs:/var/log/apache2/
      - ./dockerfiles/localhost/:/etc/letsencrypt/live/localhost/
      - /etc/letsencrypt/:/etc/letsencrypt/
    depends_on:
      - mariadb
      - composer
      - npm
      - redis
      - artisan
      - nginx
      - certbot
      - mailhog
      - phpmyadmin
      # - websockets
    networks:
      - default

  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME}_nginx
    restart: always
    environment:
      APP_FQDN: ${APP_FQDN}
      APP_NAME: ${APP_NAME}
      HTTP_IP: ${NGINX_HTTP_IP}
      HTTPS_IP: ${NGINX_HTTPS_IP}
      PUSHER_PORT: ${PUSHER_PORT}
    volumes:
      - ./:/var/www/html:delegated
      - ./dockerfiles/nginx/logs:/var/log/nginx
      - ./dockerfiles/nginx/templates/:/etc/nginx/templates
      - ./dockerfiles/localhost/:/etc/letsencrypt/live/localhost/
      - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - ${NGINX_HTTP_IP}:80
      - ${NGINX_HTTPS_IP}:443
    networks:
    - default
  
  mariadb:
    image: mariadb:latest
    container_name: ${APP_NAME}_mariadb
    restart: unless-stopped
    tty: true
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./storage/mysql/:/var/lib/mysql
    networks:
    - default

  composer:
    image: composer:latest
    container_name: ${APP_NAME}_composer
    volumes:
      - ./:/var/www/html:delegated
      - ./dockerfiles/composer/packages/:/var/www/packages/
    working_dir: /var/www/html
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - default
    user: 1000:1000

  npm:
    image: node:lts-alpine
    container_name: ${APP_NAME}_npm
    volumes:
      - ./:/var/www/html:delegated
      - ./storage/mysql:/var/lib/mysql
      - ./dockerfiles/localhost/:/var/www/certs
      - ./dockerfiles/npm/logs/:/root/.npm/_logs/
    ports:
      - 3000:3000
      - 13714:13714
      - ${NODE_IP}:5173
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - default
    user: 1000:1000

  redis:
    image: redislabs/rejson:latest
    container_name: ${APP_NAME}_redis
    restart: unless-stopped
    volumes:
      - ./dockerfiles/redis/data:/data
    expose:
      - 6379
    networks:
      - default

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: artisan.dockerfile
    container_name: ${APP_NAME}_artisan
    volumes:
      - ./:/var/www/html:delegated
      - ./dockerfiles/composer/packages/:/var/www/packages
    depends_on:
      - mariadb
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - default
    user: 1000:1000

  certbot:
     image: certbot/certbot:latest
     container_name: ${APP_NAME}_certbot
     command: certonly --webroot --webroot-path=/var/www/html/public --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email -d ${APP_FQDN} -v
     volumes:
       - ./:/var/www/html:delegated
       - /etc/letsencrypt/:/etc/letsencrypt/
       - ./dockerfiles/certbot/logs/:/var/log/letsencrypt
       - ./dockerfiles/certbot/data:/usr/share/nginx/html/letsencrypt

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${APP_NAME}_mailhog
    ports:
      - 1025
      - 8025
    networks:
      - default

  phpmyadmin:
   image: phpmyadmin
   container_name: ${APP_NAME}_phpmyadmin
   restart: always
   depends_on:
     - mariadb
   expose:
    - 80
   networks:
      - default
   environment:
    - PMA_ARBITRARY=1
    - PMA_HOST=mariadb

  # Websockets
  # Disabled by default
  # 
  # Must uncomment nginx template
  #
  # Must install beyondcode/laravel-websockets
  # composer require beyondcode/laravel-websockets
  #
  websockets:
    image: php:8.1.4RC1-fpm-alpine
    container_name: ${APP_NAME}_websockets
    restart: unless-stopped
    ports:
      - 6001:6001
    volumes:
      - ./:/var/www/html:delegated
      # - ./dockerfiles/localhost/:/var/www/certs
    working_dir: /var/www/html
    entrypoint: ["php", "artisan", "websockets:serve"]
    networks:
      - default

  queue:
    build:
      context: ./dockerfiles
      dockerfile: artisan.dockerfile
    restart: always
    volumes:
      - ./:/var/www/html:delegated
      - ./dockerfiles/composer/packages/:/var/www/packages
    depends_on:
      - mariadb
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan', 'queue:work']
    networks:
      - default
    user: 1000:1000